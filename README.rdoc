= superfeedr-ruby

Yes, the gem is called superfeedr-ruby, but the library is superfeedr only ;)

Superfeedr.com:http://superfeedr.com is a Real-time Cloud Feed Parsing service

* *Realtime* : By combining different technologies we can notify you of new entries in less than 15 minutes (or it's free)
* *No more polling* : Stop wasting your time and resources fetching 'old data', and stop being late when there is new data.
* *Simplicity* : give us urls, and we'll do the rest. Check our docs and tutorials.
* *Standardization* : No more nightmares with gazillions of formats, we will send you strict ATOM, whatever the original feed format is.
* *Multi-channel* : receive the notifications by XMPP, on a local JID or your own external JID, or using WebHooks.
* *Cost saving* : we will match the cost of your existing system.


== Example ==

        require "rubygems"
        require "superfeedr"

        ## You can have all the XMPP logging by changing the Babylon log level
        Babylon.logger.level = Log4r::DEBUG


        ##
        # Don't ever forget that all this is ASYNCHRONOUS... 
        # If you don't run EM in your program, then it will started for... however, EM.run begin a blocking call, you shoudl probably run it into a specific Thread to keep the rest of your app running  :)
        Superfeedr.connect("demo@superfeedr.com", "*********") do 
          puts "Yay... connected ;)" 
    
          Superfeedr.on_notification do |notification|
            puts "The feed #{notification.feed_url} has been fetched (#{notification.http_status}: #{notification.message_status}) and will be fecthed again in #{(notification.next_fetch - Time.now)/60} minutes."
            notification.entries.each do |e|
              puts " - #{e.title} (#{e.link}) was published (#{e.published}) with #{e.unique_id} as unique id : \n #{e.summary} (#{e.chunk}/#{e.chunks})"
            end
          end
    
          Superfeedr.subscribe("http://github.com/superfeedr.atom") do |result|
            puts "Yay, subscribed to the github Atom feed for Superfeedr"  if result
            Superfeedr.unsubscribe("http://github.com/superfeedr.atom") do |result|
              puts "Sad, you unsubscribed from the github Atom feed for Superfeedr" if result
            end   
          end
  
          Superfeedr.subscribe("http://feeds.feedburner.com/NotifixiousFoundersBlog") do |result|
            puts "Subscribed to Notifixious' blog" if result
          end
        end



== Copyright

Copyright (c) 2009 julien. See LICENSE for details.
